-param_count = 0
-m.parameters.each do |p|
	-param_count=param_count+1
	%legend
		Parameter: #{p.Name}
	%br/
	.clearfix
		%label{:for => "endpoints[#{endpointIndex}].methods[#{methodIndex}].parameters[#{param_count}].ParameterName"} Parameter Name
		.input 
			%input{:name => "endpoints[#{endpointIndex}].methods[#{methodIndex}].parameters[#{param_count}].ParameterName", |
				:id => "endpoints[#{endpointIndex}].methods[#{methodIndex}].parameters[#{param_count}].ParameterName",      |
				:value => "#{p.Name}"} |
	.clearfix
		%label{:for => "endpoints[#{endpointIndex}].methods[#{methodIndex}].parameters[#{param_count}].Description"} Description
		.input 
			%textarea{:name => "endpoints[#{endpointIndex}].methods[#{methodIndex}].parameters[#{param_count}].Description", |
			 	:id => "endpoints[#{endpointIndex}].methods[#{methodIndex}].parameters[#{param_count}].Description"} |
				#{p.Description} |
	.clearfix
		%label Required?
		.input 
			%ul.inputs-list
				%li
					%label
						%input{:type => "radio", :name => "endpoints[#{endpointIndex}].methods[#{methodIndex}].parameters[#{param_count}].Required", |
							:id => "endpoints[#{endpointIndex}].methods[#{methodIndex}].parameters[#{param_count}].Required.Yes", |
							:value => "Y", |
							:checked => p.Required == "Y"}
						%span Yes
				%li
					%label
						%input{:type => "radio", :name => "endpoints[#{endpointIndex}].methods[#{methodIndex}].parameters[#{param_count}].Required", |
							:id => "endpoints[#{endpointIndex}].methods[#{methodIndex}].parameters[#{param_count}].Required.No", |
							:value => "N", |
							:checked => p.Required == "N"} 
						%span No
	.clearfix
		%label{:for => "endpoints[#{endpointIndex}].methods[#{methodIndex}].parameters[#{param_count}].Default"} Default value
		.input 
			%input{:name => "endpoints[#{endpointIndex}].methods[#{methodIndex}].parameters[#{param_count}].Default", | 
			:id => "endpoints[#{endpointIndex}].methods[#{methodIndex}].parameters[#{param_count}].Default",          |
			:value => "#{p.Default}"} |
	
	-#this is where logic is needed to hide/display fields based on type
	.clearfix
		%label{:for => "endpoints[#{endpointIndex}].methods[#{methodIndex}].parameters[#{param_count}].Type"} Data type
		-#should be a dropdown
		.input 
			%input{:name => "endpoints[#{endpointIndex}].methods[#{methodIndex}].parameters[#{param_count}].Type", |
			:id => "endpoints[#{endpointIndex}].methods[#{methodIndex}].parameters[#{param_count}].Type", | 
			:value => "#{p.Type}"} 
			
			%span.help-block
				Can be an aribitrary value, e.g. string or int. Values "boolean" and "enumerated" will render a dropdown.
			
